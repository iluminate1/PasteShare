services:
  database:
    image: postgres:17
    container_name: database
    env_file:
      - .env.dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8088:8080"
    depends_on:
      - database

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    image: redis:8
    container_name: cache
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    environment:
      - REDIS_USER=user
      - REDIS_PASSWORD=password
      - REDIS_PORT=6379
      - REDIS_DATABASES=0

  maildev:
    image: maildev/maildev
    environment:
      - TZ=Europe/Moscow
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "8080:1080"
      - "1025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"

volumes:
  pgdata:
  rabbitmq-data:
  cache:
